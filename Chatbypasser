--configs
local HK = Enum.KeyCode[getgenv().Hotkey]

-- main
local SC = Instance.new("ScreenGui")
local TEXT = Instance.new("TextBox")
local UICorner = Instance.new("UICorner")

SC.Name = "SC"
SC.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
SC.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

TEXT.Name = "TEXT"
TEXT.Parent = SC
TEXT.BackgroundColor3 = Color3.fromRGB(82, 81, 102)
TEXT.BackgroundTransparency = 0.500
TEXT.BorderColor3 = Color3.fromRGB(0, 0, 0)
TEXT.BorderSizePixel = 0
TEXT.Position = UDim2.new(0.364328772, 0, 0.178067416, 0)
TEXT.Size = UDim2.new(0.270889074, 0, 0.0308242235, 0)
TEXT.Font = Enum.Font.SourceSans
TEXT.Text = ""
TEXT.TextColor3 = Color3.fromRGB(0, 0, 0)
TEXT.TextSize = 14.000

UICorner.CornerRadius = UDim.new(1, 0)
UICorner.Parent = TEXT

local function core()
	local script = Instance.new('LocalScript', TEXT)

	local TextChatService = game:GetService("TextChatService")
	local ReplicatedStorage = game:GetService("ReplicatedStorage")
	local UserInputService = game:GetService("UserInputService")
	local TweenService = game:GetService("TweenService")

	local textBox = script.Parent
	local screenGui = textBox.Parent
	local nugget = true
	screenGui.Enabled = false

	textBox.AnchorPoint = Vector2.new(0.5, 0)
	textBox.Position = UDim2.new(0.5, 0, 0.1, 0)

	local function chatMessage(str)
		str = tostring(str)
		if TextChatService.ChatVersion == Enum.ChatVersion.TextChatService then
			TextChatService.TextChannels.RBXGeneral:SendAsync(str)
		else
			ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer(str, "All")
		end
	end

	local function uncensor(text)
		local bypasscore = {
			A = "Ạ", B = "Ḅ", C = "Ç", D = "Ḍ", E = "Ẹ", F = "Ḟ", G = "Ḡ",
			H = "Ḥ", I = "Ị", J = "Ĵ", K = "Ḳ", L = "Ḷ", M = "Ṃ", N = "Ṇ",
			O = "Ọ", P = "Ṗ", Q = "Q̣", R = "Ṛ", S = "Ṣ", T = "Ṭ", U = "Ụ",
			V = "Ṿ", W = "Ẉ", X = "X̣", Y = "Ỵ", Z = "Ẓ",
			a = "ạ", b = "ḅ", c = "ç", d = "ḍ", e = "ẹ", f = "ḟ", g = "ḡ",
			h = "ḥ", i = "ị", j = "j̣", k = "ḳ", l = "ḷ", m = "ṃ", n = "ṇ",
			o = "ọ", p = "ṗ", q = "q̣", r = "ṛ", s = "ṣ", t = "ṭ", u = "ụ",
			v = "ṿ", w = "ẉ", x = "x̣", y = "ỵ", z = "ẓ"
		}

		local hellyea = ""
		for i = 1, #text do
			local char = text:sub(i, i)
			hellyea = hellyea .. (bypasscore[char] or char)
		end
		return hellyea
	end

	local function animateTextBox(show)
		if show then
			screenGui.Enabled = true
			textBox.Size = UDim2.new(0, 0, 0, 0)
			textBox.BackgroundTransparency = 1

			local tweenInfo = TweenInfo.new(0.1, Enum.EasingStyle.Circular, Enum.EasingDirection.Out)
			local tween = TweenService:Create(textBox, tweenInfo, {
				Size = UDim2.new(0.270889074, 0, 0.0308242235, 0),
				BackgroundTransparency = 0.5
			})

			tween:Play()
			tween.Completed:Wait()
			textBox:CaptureFocus()
		else
			local tweenInfo = TweenInfo.new(0.1, Enum.EasingStyle.Circular, Enum.EasingDirection.In)
			local tween = TweenService:Create(textBox, tweenInfo, {
				Size = UDim2.new(0, 0, 0, 0),
				BackgroundTransparency = 1
			})

			tween:Play()
			tween.Completed:Wait()
			screenGui.Enabled = false
		end
	end

	UserInputService.InputBegan:Connect(function(input, gameProcessed)
		if input.KeyCode == HK and nugget and not gameProcessed then
			if screenGui.Enabled then
				animateTextBox(false)
			else
				animateTextBox(true)
			end
		end
	end)

	textBox.FocusLost:Connect(function(enterPressed)
		if enterPressed and nugget then
			local inputText = textBox.Text
			if inputText:sub(1, 1) == "/" or inputText:sub(1, 1) == ";" then
				if inputText == "/quit" or inputText == ";quit" then
					nugget = false
					screenGui.Enabled = false
					textBox.Text = ""
					return
				elseif inputText == "/fix" or inputText == ";fix" then
					chatMessage("ABCEabce1234()•%$")
					textBox.Text = ""
					animateTextBox(false)
					return
				end
			end
                    -- made by thereal_asu
			local censoredText = uncensor(inputText)
			chatMessage(censoredText)
			textBox.Text = ""
			animateTextBox(false)
		else
			animateTextBox(false)
		end
	end)
end

coroutine.wrap(core)()
